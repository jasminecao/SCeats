{"version":3,"sources":["Header.js","MapContainer.js","RestCard.js","RestCardContainer.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","NameStyle","styled","h3","AddressStyle","div","PriceStyle","RoundTag","span","col","MapContainer","useState","selected","setSelected","key","config","googleMapsApiKey","mapContainerStyle","width","height","zoom","center","lat","lng","data","content","body","map","item","name","position","loc","onClick","service","includes","indexOf","onSelect","clickable","onCloseClick","target","rel","href","link","address","rating","role","price","str","colors","takeout","delivery","curbside","online","grubhub","doordash","RestCard","props","RestCardContainer","search","setSearch","React","filtered","setFiltered","useEffect","results","filter","entry","toLowerCase","type","placeholder","value","onChange","e","block","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.171efb99.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <>\r\n      <div className=\"header\">\r\n        <h1>üçúSCeats</h1>\r\n        <span> A map of restaurants in State College, PA.</span>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Header;","import React, {useState} from 'react';\r\nimport { GoogleMap, LoadScript, Marker, InfoWindow } from '@react-google-maps/api';\r\nimport data from './data.json';\r\nimport styled from 'styled-components';\r\nimport config from './config.json';\r\n\r\nconst NameStyle = styled.h3`\r\n  color: #4F4F4F;\r\n`\r\n\r\nconst AddressStyle = styled.div`\r\n`\r\n\r\nconst PriceStyle = styled.div`\r\n  font-family: Roboto, Arial, sans-serif;\r\n  font-size: .875rem;\r\n  font-weight: 400;\r\n  line-height: 1.25rem;\r\n`\r\n\r\nconst RoundTag = styled.span` \r\n  border-radius: 2em;\r\n  align-items: center;\r\n  background-color: ${({ col }) => col};\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  line-height: 1.5rem;\r\n  padding-left: .5em;\r\n  padding-right: .5em;\r\n  white-space: nowrap;\r\n  margin-top: .35rem;\r\n  margin-right: .35rem;\r\n`\r\n\r\nconst MapContainer = () => {\r\n  const [ selected, setSelected ] = useState({});\r\n  const key = config[\"KEY\"];\r\n\r\n  const mapStyles = {\r\n    width: '100%',\r\n    height: '90vh',\r\n  };\r\n\r\n  const defaultCenter = {\r\n    lat: 40.7929, lng: -77.8604\r\n  }\r\n\r\n  const onSelect = item => {\r\n    setSelected(item);\r\n    if (item.service.includes(\"T\")) {\r\n      item.service[selected.service.indexOf(\"T\")] = \"takeout\"\r\n    }\r\n    if (item.service.includes(\"D\")) {\r\n      item.service[selected.service.indexOf(\"D\")] = \"delivery\"\r\n    }\r\n    if (item.service.includes(\"C\")) {\r\n      item.service[selected.service.indexOf(\"C\")] = \"curbside\"\r\n    }\r\n    if (item.service.includes(\"O\")) {\r\n      item.service[selected.service.indexOf(\"O\")] = \"online\"\r\n    }\r\n    if (item.service.includes(\"DT\")) {\r\n      item.service[selected.service.indexOf(\"DT\")] = \"drive-thru\"\r\n    }\r\n    if (item.service.includes(\"GR\")) {\r\n      item.service[selected.service.indexOf(\"GR\")] = \"grubhub\"\r\n    }\r\n    if (item.service.includes(\"DD\")) {\r\n      item.service[item.service.indexOf(\"DD\")] = \"doordash\"\r\n    }\r\n    if (item.service.includes(\"UE\")) {\r\n      item.service[item.service.indexOf(\"UE\")] = \"uber eats\"\r\n    }\r\n    if (item.service.includes(\"G\")) {\r\n      item.service[selected.service.indexOf(\"G\")] = \"gift card\"\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"map\">\r\n        <LoadScript googleMapsApiKey={key}>\r\n            <GoogleMap\r\n              mapContainerStyle={mapStyles}\r\n              zoom={15}\r\n              center={defaultCenter}\r\n            >\r\n            {data.content.body.map(item => {\r\n              return (\r\n                <Marker key={item.name} position={item.loc} onClick={() => onSelect(item)}/>\r\n              )\r\n              })\r\n            }\r\n            {selected.loc &&\r\n              (\r\n                <InfoWindow\r\n                  position={selected.loc} clickable={true} onCloseClick={ () => setSelected({})}\r\n                >\r\n                <div className=\"info\">\r\n                <NameStyle><a target=\"_blank\" rel=\"noopener noreferrer\" href={selected.link}>{selected.name}</a></NameStyle>\r\n                <AddressStyle>{selected.address}</AddressStyle>\r\n                <RoundTag col={\"#F5F5F5\"}><PriceStyle>{selected.rating}<span role=\"img\">‚≠ê</span></PriceStyle></RoundTag>\r\n                <RoundTag col={\"#F5F5F5\"}><PriceStyle>{selected.price}</PriceStyle></RoundTag>\r\n                <br></br>\r\n                  {\r\n                    selected.service.map(str => {\r\n                      return(\r\n                        <RoundTag col={\"#F5F5F5\"}>\r\n                        {str}\r\n                        </RoundTag>\r\n                      )\r\n                    })\r\n                  }\r\n                </div>\r\n                </InfoWindow>\r\n              )\r\n            }\r\n            </GoogleMap>\r\n        </LoadScript>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MapContainer;","import React, {useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport MapContainer from './MapContainer';\r\n\r\nconst NameStyle = styled.h3`\r\n  color: #4F4F4F;\r\n`\r\n\r\nconst AddressStyle = styled.div`\r\n`\r\n\r\nconst PriceStyle = styled.div`\r\n  font-family: Roboto, Arial, sans-serif;\r\n  font-size: .875rem;\r\n  font-weight: 400;\r\n  line-height: 1.25rem;\r\n`\r\n\r\nconst RoundTag = styled.span` \r\n  border-radius: 2em;\r\n  align-items: center;\r\n  background-color: ${({ col }) => col};\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  line-height: 1.5rem;\r\n  padding-left: .5em;\r\n  padding-right: .5em;\r\n  white-space: nowrap;\r\n  margin-top: .35rem;\r\n  margin-right: .35rem;\r\n`\r\n\r\nconst colors = {\r\n  takeout: \"#FFE6D8\",\r\n  delivery: \"#CDE5FB\",\r\n  curbside: \"#D3EDF3\",\r\n  \"drive-thru\": \"#FFDEB2\",\r\n  online: \"#D5CEF5\",\r\n  grubhub: \"#E3EAB8\",\r\n  doordash: \"#FFBBB4\",\r\n  \"uber eats\": \"#D7F5D7\",\r\n  \"gift card\": \"#FBD8F1\",\r\n  \"N/A\": \"#F5F5F5\"\r\n}\r\n\r\nconst RestCard = props => {\r\n  const {name, address, price, rating, link, service} = props\r\n\r\n  if (service.includes(\"T\")) {\r\n    service[service.indexOf(\"T\")] = \"takeout\"\r\n  }\r\n  if (service.includes(\"D\")) {\r\n    service[service.indexOf(\"D\")] = \"delivery\"\r\n  }\r\n  if (service.includes(\"C\")) {\r\n    service[service.indexOf(\"C\")] = \"curbside\"\r\n  }\r\n  if (service.includes(\"DT\")) {\r\n    service[service.indexOf(\"DT\")] = \"drive-thru\"\r\n  }\r\n  if (service.includes(\"O\")) {\r\n    service[service.indexOf(\"O\")] = \"online\"\r\n  }\r\n  if (service.includes(\"GR\")) {\r\n    service[service.indexOf(\"GR\")] = \"grubhub\"\r\n  }\r\n  if (service.includes(\"DD\")) {\r\n    service[service.indexOf(\"DD\")] = \"doordash\"\r\n  }\r\n  if (service.includes(\"UE\")) {\r\n    service[service.indexOf(\"UE\")] = \"uber eats\"\r\n  }\r\n  if (service.includes(\"G\")) {\r\n    service[service.indexOf(\"G\")] = \"gift card\"\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"card\">\r\n        <NameStyle><a className=\"link\" target=\"_blank\" rel=\"noopener noreferrer\" href={link}>{name}</a></NameStyle>\r\n        <AddressStyle>{address}</AddressStyle>\r\n        <RoundTag col={\"#F5F5F5\"}><PriceStyle>{rating}<span role=\"img\">‚≠ê</span></PriceStyle></RoundTag>\r\n        <RoundTag col={\"#F5F5F5\"}><PriceStyle>{price}</PriceStyle></RoundTag>\r\n        <br></br>\r\n        {\r\n          service.map(str => {\r\n            return(\r\n              <RoundTag col={colors[str]}>\r\n              {str}\r\n              </RoundTag>\r\n            )\r\n          })\r\n        }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RestCard;","import React, {useState, useEffect} from 'react';\r\nimport RestCard from './RestCard';\r\nimport data from './data.json';\r\nimport styled from 'styled-components';\r\n\r\nconst RestCardContainer = () => {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [filtered, setFiltered] = React.useState([]);\r\n\r\n  const handleChange = e => {\r\n    setSearch(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const results = data.content.body.filter(entry => \r\n      entry.name.includes(search) || entry.name.toLowerCase().includes(search)\r\n    );\r\n    setFiltered(results);\r\n  }, [search]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"restaurant\">\r\n        <h2 className=\"restHeader\">Restaurants</h2>\r\n        <input className=\"search\" type=\"text\" placeholder=\"Search for a restaurant...\" value={search} onChange={handleChange}/>\r\n        {filtered.map(block => RestCard(block))}\r\n        <div className=\"footer\">\r\n          <p>Made with üçú by Jasmine Cao. <a className=\"link\" target=\"_blank\" rel=\"noopener noreferrer\" href={\"https://airtable.com/shrxgt5I2wDwfhilG\"}>Feedback?</a></p>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RestCardContainer;","import React from 'react';\r\nimport './App.css';\r\nimport Header from './Header.js';\r\nimport MapContainer from './MapContainer.js';\r\nimport RestCardContainer from './RestCardContainer';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Header/>\r\n      <RestCardContainer/>\r\n      <MapContainer/>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}